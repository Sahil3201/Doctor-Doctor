# Generated by Django 3.0.8 on 2020-11-01 14:19

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('is_doctor', models.BooleanField(blank=True, default=False, null=True)),
                ('password', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('date_created', models.DateField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('speciality', models.CharField(blank=True, max_length=512, null=True)),
                ('college', models.CharField(blank=True, max_length=60, null=True)),
                ('experience_years', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'User: Doctor',
            },
            bases=('accounts.customuser',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('a+', 'A+ve'), ('a-', 'A-ve'), ('b+', 'B+ve'), ('b-', 'B-ve'), ('c+', 'AB+ve'), ('c-', 'AB-ve'), ('o+', 'O+ve'), ('o-', 'O-ve')], max_length=2, null=True)),
                ('allergies', models.CharField(blank=True, max_length=512, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('s', 'single'), ('m', 'married'), ('d', 'divorsed'), ('w', 'windowed')], max_length=1, null=True)),
                ('emergency_Name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Your emergency name')),
                ('emergency_phone_number', models.IntegerField(blank=True, null=True, verbose_name='Your emergency phone number')),
                ('emergency_relationship', models.CharField(blank=True, max_length=30, null=True, verbose_name='Relationship')),
                ('insurance_id', models.IntegerField(blank=True, null=True)),
                ('insurance_company', models.CharField(blank=True, max_length=512, null=True)),
                ('insurance_validity', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'User: Patient',
            },
            bases=('accounts.customuser',),
        ),
        migrations.CreateModel(
            name='Medicines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_name', models.CharField(blank=True, max_length=512, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicines_appointment', to='accounts.Doctor')),
            ],
            options={
                'verbose_name': 'Medicine',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('day1', models.DateField(blank=True, null=True)),
                ('day2', models.DateField(blank=True, null=True)),
                ('day3', models.DateField(blank=True, null=True)),
                ('approved_for', models.CharField(blank=True, max_length=10, null=True)),
                ('message', models.CharField(blank=True, max_length=512, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_doctor', to='accounts.Doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_patient', to='accounts.Patient')),
            ],
            options={
                'verbose_name': 'Appointment',
            },
        ),
    ]
